@using Razorpay.Api
@{
    ViewData["Title"] = "Create Order";
}

<h2>Create Order</h2>

<form action="/Payment/Home/PaymentSuccess" method="POST">
    <script src="https://checkout.razorpay.com/v1/checkout.js"
            data-key="@ViewBag.RazorpayKey"
            data-amount="@ViewBag.Amount"
            data-currency="INR"
            data-order_id="@ViewBag.OrderId"
            data-buttontext="Pay with Razorpay"
            data-name="BGSW Reporting Tool"
            data-description="Test Transaction"
            data-image="@Url.Content("~/images/BGSW_logo.png")"
            data-prefill.name="Test User"
            data-prefill.email="test.user@example.com"
            data-theme.color="#F37254"></script>
    <input type="hidden" name="_token" value="@Html.AntiForgeryToken()">
</form>


@* <html xmlns="http://www.w3.org/1999/xhtml">

<head runat="server">
    <title>Razorpay .Net Sample App</title>
    <form action="/Order/Payment" method="post" name="razorpayForm">
        <input id="razorpay_payment_id" type="hidden" name="razorpay_payment_id" />
        <input id="razorpay_order_id" type="hidden" name="razorpay_order_id" />
        <input id="razorpay_signature" type="hidden" name="razorpay_signature" />
    </form>
</head>

<body>
    <button id="rzp-button1">Pay with Razorpay</button>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        var orderId = "@ViewBag.OrderId"
        var options = {
            "key": "@ViewBag.RazorpayKey", // Enter the Key ID generated from the Dashboard
            "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            "currency": "INR",
            "name": "BGSW Reporting Tool",
            "description": "Bug Fix Budget",
            "order_id": orderId,
            "image": "@Url.Content("~/images/BGSW_logo.png")",
            "prefill": {
                "name": "Shravani",
                "email": "shravanideshpande@example.com",
                "contact": "919000090000",
            },
            "notes": {
                "address": "Hello World"
            },
            "theme": {
                "color": "#3399cc"
            }
        }
        // Boolean whether to show image inside a white frame. (default: true)
        options.theme.image_padding = false;
        options.handler = function (response) {
            document.getElementById('razorpay_payment_id').value = response.razorpay_payment_id;
            document.getElementById('razorpay_order_id').value = orderId;
            document.getElementById('razorpay_signature').value = response.razorpay_signature;
            document.razorpayForm.submit();
        };
        options.modal = {
            ondismiss: function () {
                console.log("This code runs when the popup is closed");
            },
            // Boolean indicating whether pressing escape key
            // should close the checkout form. (default: true)
            escape: true,
            // Boolean indicating whether clicking translucent blank
            // space outside checkout form should close the form. (default: false)
            backdropclose: false
        };
        var rzp = new Razorpay(options);
        document.getElementById('rzp-button1').onclick = function (e) {
            rzp.open();
            e.preventDefault();
        }
    </script>
</body>
</html>
 *@